// Mocks generated by Mockito 5.4.0 from annotations
// in musicday_mobile/test/auth/interactors/sign_up_interactor_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:musicday_mobile/auth/dtos/google_sign_in_start_request.dart'
    as _i9;
import 'package:musicday_mobile/auth/dtos/google_sign_in_start_response.dart'
    as _i8;
import 'package:musicday_mobile/auth/dtos/sign_up_request.dart' as _i11;
import 'package:musicday_mobile/auth/dtos/sign_up_response.dart' as _i10;
import 'package:musicday_mobile/auth/models/session.dart' as _i13;
import 'package:musicday_mobile/auth/network/auth_remote_service.dart' as _i6;
import 'package:musicday_mobile/auth/repositories/auth_session_repository.dart'
    as _i12;
import 'package:musicday_mobile/core/logging/logger.dart' as _i2;
import 'package:musicday_mobile/core/logging/logger_factory.dart' as _i5;
import 'package:musicday_mobile/core/validation/validator.dart' as _i4;
import 'package:retrofit/retrofit.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLogger_0 extends _i1.SmartFake implements _i2.Logger {
  _FakeLogger_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpResponse_1<T> extends _i1.SmartFake
    implements _i3.HttpResponse<T> {
  _FakeHttpResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Logger].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogger extends _i1.Mock implements _i2.Logger {
  @override
  void debug(String? message) => super.noSuchMethod(
        Invocation.method(
          #debug,
          [message],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void warn(
    String? message, {
    dynamic exception,
    StackTrace? stacktrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #warn,
          [message],
          {
            #exception: exception,
            #stacktrace: stacktrace,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void error(
    String? message, {
    dynamic exception,
    StackTrace? stacktrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #error,
          [message],
          {
            #exception: exception,
            #stacktrace: stacktrace,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Validator].
///
/// See the documentation for Mockito's code generation for more information.
class MockValidator<T> extends _i1.Mock implements _i4.Validator<T> {
  @override
  bool validate(T? data) => (super.noSuchMethod(
        Invocation.method(
          #validate,
          [data],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [LoggerFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoggerFactory extends _i1.Mock implements _i5.LoggerFactory {
  @override
  _i2.Logger create(String? tag) => (super.noSuchMethod(
        Invocation.method(
          #create,
          [tag],
        ),
        returnValue: _FakeLogger_0(
          this,
          Invocation.method(
            #create,
            [tag],
          ),
        ),
        returnValueForMissingStub: _FakeLogger_0(
          this,
          Invocation.method(
            #create,
            [tag],
          ),
        ),
      ) as _i2.Logger);
}

/// A class which mocks [AuthRemoteService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteService extends _i1.Mock implements _i6.AuthRemoteService {
  @override
  _i7.Future<_i3.HttpResponse<_i8.GoogleSignInStartResponse>> startGoogleSignIn(
          _i9.GoogleSignInStartRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #startGoogleSignIn,
          [request],
        ),
        returnValue:
            _i7.Future<_i3.HttpResponse<_i8.GoogleSignInStartResponse>>.value(
                _FakeHttpResponse_1<_i8.GoogleSignInStartResponse>(
          this,
          Invocation.method(
            #startGoogleSignIn,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.HttpResponse<_i8.GoogleSignInStartResponse>>.value(
                _FakeHttpResponse_1<_i8.GoogleSignInStartResponse>(
          this,
          Invocation.method(
            #startGoogleSignIn,
            [request],
          ),
        )),
      ) as _i7.Future<_i3.HttpResponse<_i8.GoogleSignInStartResponse>>);
  @override
  _i7.Future<_i3.HttpResponse<_i10.SignUpResponse>> signUp(
          _i11.SignUpRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [request],
        ),
        returnValue: _i7.Future<_i3.HttpResponse<_i10.SignUpResponse>>.value(
            _FakeHttpResponse_1<_i10.SignUpResponse>(
          this,
          Invocation.method(
            #signUp,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.HttpResponse<_i10.SignUpResponse>>.value(
                _FakeHttpResponse_1<_i10.SignUpResponse>(
          this,
          Invocation.method(
            #signUp,
            [request],
          ),
        )),
      ) as _i7.Future<_i3.HttpResponse<_i10.SignUpResponse>>);
}

/// A class which mocks [AuthSessionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthSessionRepository extends _i1.Mock
    implements _i12.AuthSessionRepository {
  @override
  _i7.Stream<_i13.Session?> get currentSession => (super.noSuchMethod(
        Invocation.getter(#currentSession),
        returnValue: _i7.Stream<_i13.Session?>.empty(),
        returnValueForMissingStub: _i7.Stream<_i13.Session?>.empty(),
      ) as _i7.Stream<_i13.Session?>);
  @override
  set currentSession(_i7.Stream<_i13.Session?>? _currentSession) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentSession,
          _currentSession,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> saveSession(_i13.Session? session) => (super.noSuchMethod(
        Invocation.method(
          #saveSession,
          [session],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<String?> getCurrentUserId() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUserId,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);
  @override
  _i7.Future<void> deleteSession() => (super.noSuchMethod(
        Invocation.method(
          #deleteSession,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
