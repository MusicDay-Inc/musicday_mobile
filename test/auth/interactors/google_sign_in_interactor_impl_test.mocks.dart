// Mocks generated by Mockito 5.4.0 from annotations
// in musicday_mobile/test/auth/interactors/google_sign_in_interactor_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:google_sign_in/google_sign_in.dart' as _i3;
import 'package:google_sign_in_platform_interface/google_sign_in_platform_interface.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:musicday_mobile/auth/dtos/google_sign_in_start_request.dart'
    as _i12;
import 'package:musicday_mobile/auth/dtos/google_sign_in_start_response.dart'
    as _i11;
import 'package:musicday_mobile/auth/dtos/sign_up_request.dart' as _i14;
import 'package:musicday_mobile/auth/dtos/sign_up_response.dart' as _i13;
import 'package:musicday_mobile/auth/models/session.dart' as _i9;
import 'package:musicday_mobile/auth/network/auth_remote_service.dart' as _i10;
import 'package:musicday_mobile/auth/repositories/auth_session_repository.dart'
    as _i8;
import 'package:musicday_mobile/core/logging/logger.dart' as _i2;
import 'package:musicday_mobile/core/logging/logger_factory.dart' as _i5;
import 'package:retrofit/retrofit.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLogger_0 extends _i1.SmartFake implements _i2.Logger {
  _FakeLogger_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoogleSignInAuthentication_1 extends _i1.SmartFake
    implements _i3.GoogleSignInAuthentication {
  _FakeGoogleSignInAuthentication_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpResponse_2<T> extends _i1.SmartFake
    implements _i4.HttpResponse<T> {
  _FakeHttpResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Logger].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogger extends _i1.Mock implements _i2.Logger {
  MockLogger() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void debug(String? message) => super.noSuchMethod(
        Invocation.method(
          #debug,
          [message],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void warn(
    String? message, {
    dynamic exception,
    StackTrace? stacktrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #warn,
          [message],
          {
            #exception: exception,
            #stacktrace: stacktrace,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void error(
    String? message, {
    dynamic exception,
    StackTrace? stacktrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #error,
          [message],
          {
            #exception: exception,
            #stacktrace: stacktrace,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LoggerFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoggerFactory extends _i1.Mock implements _i5.LoggerFactory {
  MockLoggerFactory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Logger create(String? tag) => (super.noSuchMethod(
        Invocation.method(
          #create,
          [tag],
        ),
        returnValue: _FakeLogger_0(
          this,
          Invocation.method(
            #create,
            [tag],
          ),
        ),
      ) as _i2.Logger);
}

/// A class which mocks [GoogleSignIn].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignIn extends _i1.Mock implements _i3.GoogleSignIn {
  MockGoogleSignIn() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SignInOption get signInOption => (super.noSuchMethod(
        Invocation.getter(#signInOption),
        returnValue: _i6.SignInOption.standard,
      ) as _i6.SignInOption);
  @override
  List<String> get scopes => (super.noSuchMethod(
        Invocation.getter(#scopes),
        returnValue: <String>[],
      ) as List<String>);
  @override
  bool get forceCodeForRefreshToken => (super.noSuchMethod(
        Invocation.getter(#forceCodeForRefreshToken),
        returnValue: false,
      ) as bool);
  @override
  _i7.Stream<_i3.GoogleSignInAccount?> get onCurrentUserChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onCurrentUserChanged),
        returnValue: _i7.Stream<_i3.GoogleSignInAccount?>.empty(),
      ) as _i7.Stream<_i3.GoogleSignInAccount?>);
  @override
  _i7.Future<_i3.GoogleSignInAccount?> signInSilently({
    bool? suppressErrors = true,
    bool? reAuthenticate = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInSilently,
          [],
          {
            #suppressErrors: suppressErrors,
            #reAuthenticate: reAuthenticate,
          },
        ),
        returnValue: _i7.Future<_i3.GoogleSignInAccount?>.value(),
      ) as _i7.Future<_i3.GoogleSignInAccount?>);
  @override
  _i7.Future<bool> isSignedIn() => (super.noSuchMethod(
        Invocation.method(
          #isSignedIn,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<_i3.GoogleSignInAccount?> signIn() => (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
        ),
        returnValue: _i7.Future<_i3.GoogleSignInAccount?>.value(),
      ) as _i7.Future<_i3.GoogleSignInAccount?>);
  @override
  _i7.Future<_i3.GoogleSignInAccount?> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i7.Future<_i3.GoogleSignInAccount?>.value(),
      ) as _i7.Future<_i3.GoogleSignInAccount?>);
  @override
  _i7.Future<_i3.GoogleSignInAccount?> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i7.Future<_i3.GoogleSignInAccount?>.value(),
      ) as _i7.Future<_i3.GoogleSignInAccount?>);
  @override
  _i7.Future<bool> requestScopes(List<String>? scopes) => (super.noSuchMethod(
        Invocation.method(
          #requestScopes,
          [scopes],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<bool> canAccessScopes(
    List<String>? scopes, {
    String? accessToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #canAccessScopes,
          [scopes],
          {#accessToken: accessToken},
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [GoogleSignInAccount].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockGoogleSignInAccount extends _i1.Mock
    implements _i3.GoogleSignInAccount {
  MockGoogleSignInAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: '',
      ) as String);
  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: '',
      ) as String);
  @override
  _i7.Future<_i3.GoogleSignInAuthentication> get authentication =>
      (super.noSuchMethod(
        Invocation.getter(#authentication),
        returnValue: _i7.Future<_i3.GoogleSignInAuthentication>.value(
            _FakeGoogleSignInAuthentication_1(
          this,
          Invocation.getter(#authentication),
        )),
      ) as _i7.Future<_i3.GoogleSignInAuthentication>);
  @override
  _i7.Future<Map<String, String>> get authHeaders => (super.noSuchMethod(
        Invocation.getter(#authHeaders),
        returnValue: _i7.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i7.Future<Map<String, String>>);
  @override
  _i7.Future<void> clearAuthCache() => (super.noSuchMethod(
        Invocation.method(
          #clearAuthCache,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [GoogleSignInAuthentication].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleSignInAuthentication extends _i1.Mock
    implements _i3.GoogleSignInAuthentication {
  MockGoogleSignInAuthentication() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [AuthSessionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthSessionRepository extends _i1.Mock
    implements _i8.AuthSessionRepository {
  MockAuthSessionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Stream<_i9.Session?> get currentSession => (super.noSuchMethod(
        Invocation.getter(#currentSession),
        returnValue: _i7.Stream<_i9.Session?>.empty(),
      ) as _i7.Stream<_i9.Session?>);
  @override
  set currentSession(_i7.Stream<_i9.Session?>? _currentSession) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentSession,
          _currentSession,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> saveSession(_i9.Session? session) => (super.noSuchMethod(
        Invocation.method(
          #saveSession,
          [session],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> deleteSession() => (super.noSuchMethod(
        Invocation.method(
          #deleteSession,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [AuthRemoteService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteService extends _i1.Mock implements _i10.AuthRemoteService {
  MockAuthRemoteService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<
      _i4.HttpResponse<_i11.GoogleSignInStartResponse>> startGoogleSignIn(
          _i12.GoogleSignInStartRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #startGoogleSignIn,
          [request],
        ),
        returnValue:
            _i7.Future<_i4.HttpResponse<_i11.GoogleSignInStartResponse>>.value(
                _FakeHttpResponse_2<_i11.GoogleSignInStartResponse>(
          this,
          Invocation.method(
            #startGoogleSignIn,
            [request],
          ),
        )),
      ) as _i7.Future<_i4.HttpResponse<_i11.GoogleSignInStartResponse>>);
  @override
  _i7.Future<_i4.HttpResponse<_i13.SignUpResponse>> signUp(
          _i14.SignUpRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [request],
        ),
        returnValue: _i7.Future<_i4.HttpResponse<_i13.SignUpResponse>>.value(
            _FakeHttpResponse_2<_i13.SignUpResponse>(
          this,
          Invocation.method(
            #signUp,
            [request],
          ),
        )),
      ) as _i7.Future<_i4.HttpResponse<_i13.SignUpResponse>>);
}
